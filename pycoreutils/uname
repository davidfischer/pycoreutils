#!/usr/bin/env python

import platform, pycoreutils

p = pycoreutils.optparse()
p.add_option("-a", "--all", action="store_true", dest="all",
        help="print all information, in the following order, except omit -p and -i if unknown")
p.add_option("-s", "--kernel-name", action="store_true", dest="kernelname",
        help="print the kernel name")
p.add_option("-n", "--nodename", action="store_true", dest="nodename",
        help="print the network node hostname")
p.add_option("-r", "--kernel-release", action="store_true", dest="kernelrelease",
        help="print the kernel release")
p.add_option("-v", "--kernel-version", action="store_true", dest="kernelversion",
        help="print the kernel version")
p.add_option("-m", "--machine", action="store_true", dest="machine",
        help="print the machine hardware name")
p.add_option("-p", "--processor", action="store_true", dest="processor",
        help="print the processor type or \"unknown\"")
p.add_option("-i", "--hardware-platform", action="store_true", dest="hardwareplatform",
        help="print the hardware platform or \"unknown\"")
p.add_option("-o", "--operating-system", action="store_true", dest="operatingsystem",
        help="print the operating system")
(opts, args) = p.parse_args()

x = None

if opts.kernelname or opts.all:
    x = True
    print platform.system(),
if opts.nodename or opts.all:
    x = True
    print platform.node(),
if opts.kernelrelease or opts.all:
    x = True
    print platform.release(),
if opts.kernelversion or opts.all:
    x = True
    print platform.version(),
if opts.machine or opts.all:
    x = True
    print platform.machine(),
if opts.processor or opts.all:
    x = True
    print platform.processor(),
if opts.hardwareplatform or opts.all:
    x = True
    print platform.architecture()[0],
if opts.operatingsystem or opts.all:
    x = True
    print platform.system(),

if not x:
    print platform.system(),

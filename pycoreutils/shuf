#!/usr/bin/env python

import pycoreutils, random, sys

p = pycoreutils.optparse()
p.add_option("-e", "--echo", action="store_true", dest="echo",
        help="treat each ARG as an input line")
p.add_option("-i", "--input-range", action="store", dest="inputrange",
        help="treat each number LO through HI as an input line")
p.add_option("-n", "--head-count", action="store", dest="headcount",
        help="output at most HEADCOUNT lines")
p.add_option("-o", "--output", action="store", dest="output",
        help="write result to OUTPUT instead of standard output")
(opts, args) = p.parse_args()

lines = ''
outfd = sys.stdout

# Write to file if -o is specified
if opts.output:
    outfd = pycoreutils.fopen(opts.output, 'w')

if opts.echo:
    if opts.inputrange:
        print u"shuf: cannot combine -e and -i options"
        sys.exit(1)
    lines = args
    random.shuffle(lines)

    if opts.headcount:
        lines = lines[0:int(opts.headcount)]
    for line in lines:
        outfd.write("%s\n" % line)

elif len(args) > 1:
    print u"shuf: extra operand `%s'" % (args[1])
    print u"Try shuf --help' for more information."
    sys.exit(1)

elif opts.inputrange:
    (lo, hi) = opts.inputrange.split('-')
    lines = range(int(lo), int(hi)+1)
    random.shuffle(lines)

    if opts.headcount:
        lines = lines[0:int(opts.headcount)]
    for line in lines:
        outfd.write("%i\n" % line)

else:
    # Use stdin for input if no file is specified
    if len(args) == 0:
        fd = sys.stdin
    else:
        fd = pycoreutils.fopen(args[0])

    lines = fd.readlines()
    random.shuffle(lines)

    if opts.headcount:
        lines = lines[0:int(opts.headcount)]
    for line in lines:
        outfd.write(line)
